{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string"
    },
    "project": {
      "type": "string"
    },
    "mlWorkspace": {
      "type": "string"
    },
    "storageAccount": {
      "type": "string"
    },
    "keyVault": {
      "type": "object"
    },
    "appInsights": {
      "type": "string"
    },
    "containerRegistry": {
      "type": "string"
    }
  },
  "variables": {
    "tags": {
        "Environment": "[parameters('environment')]",
        "Project": "[parameters('project')]"
    },
    "mlWorkspaceDependsOnRequired": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount'))]",
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVault').name)]",
        "[resourceId('Microsoft.Insights/components', parameters('appInsights'))]"
    ],
    "mlWorkspaceDependsOnContainerRegistry": "[
      if(empty(parameters('containerRegistry')), 
        createArray(), 
        createArray(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistry')))
      )
    ]"
  },
  "resources": [
    { // Key Vault
      "name": "[parameters('keyVault').name]",
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "location": "[resourceGroup().location]",
      "tags": "[variables('tags')]",
      "properties": {
        "tenantId": "[parameters('keyVault').tenantId]", // active directory tenant id
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "enabledForDeployment": "[parameters('keyVault').enabledForDeployment]",
        "enabledForTemplateDeployment": "[parameters('keyVault').enabledForTemplateDeployment]",
        "enableSoftDelete": "[parameters('keyVault').enableSoftDelete]",
        "softDeleteRetentionInDays": "[parameters('keyVault').softDeleteRetentionInDays]"
      }
    },
    {    // App Insights
      "name": "[parameters('appInsights')]",
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "location": "[resourceGroup().location]",
      "tags": "[variables('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "RetentionInDays": 90,
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled",
        "IngestionMode": "ApplicationInsights"
      }
    },
    { //Container Registry
      "name": "[parameters('containerRegistry')]",
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2019-12-01-preview",
      "location": "[resourceGroup().location]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true
      },
      "copy": {
        "name": "copyStorage",
        "count": "[length(variables('mlWorkspaceDependsOnContainerRegistry'))]"
      }
    },
    { // Storage Account
      "name": "[parameters('storageAccount')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "location": "[resourceGroup().location]",
      "tags": "[variables('tags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": true,
        "allowBlobPublicAccess": false
      }
    },    
    {    // Azure ML Workspace
      "name": "[parameters('mlWorkspace')]",
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2020-08-01",
      "tags": "[variables('tags')]",
      "dependsOn": "[concat(variables('mlWorkspaceDependsOnRequired'),variables('mlWorkspaceDependsOnContainerRegistry'))]",
      "properties": {
        "friendlyName": "[parameters('mlWorkspace').name]",
        "keyVault": "[resourceId('Microsoft.KeyVault/vaults',parameters('keyVault').name)]",
        "applicationInsights": "[resourceId('Microsoft.Insights/components',parameters('appInsights'))]",
        "containerRegistry": "[resourceId('Microsoft.ContainerRegistry/registries',parameters('containerRegistry'))]",
        "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts/',parameters('storageAccount'))]"
      }
    }
  ]
}